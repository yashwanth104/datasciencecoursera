q()
available.packages()
install.packages(c("slidify","devtools")
install.packages("slidify")
install.packages("slidify")
install.packages("slidify")
install.packages("slidify")
find.package("devtools")
install.packages("devtools")
library("devtools")
find_rtools()
getwd()
install.packages("swirl")
packageVersion("swirl")
library("swirl")
install_from_swirl("swirl")
install_from_swirl("swirl")
install_from_swirl("R_programming")
packageVersion("swirl")
library("swirl")
library("swirl")
swirl()
5+7
x<-5+7
x
y<-x-3
y
z<-c(1.1,9,3.14)
?c
z
c(z,555,z)
z*2+100
my_sqrt<-sqrt(z-1)
my_sqrt
my_div<-z/my_sqrt
my_div
a<-(1,2,3,4)
a<-c(1,2,3,4)
c(1,2,3,4)+c(0,10)
c(,1,2,3,4)+c(0,10,100)
c(1,2,3,4)+c(0,10,100)
z*2+1000
my_div
getwd()
ls()
x<-9
ls()
dir()
?list.filees
??list.files
info()
??list.files
dir()
bye()
swirl()
getwd()
ls()
x<-9
ls()
dir()
?list.files
args()
args(list.files)
old.dir<-hetwd()
old.dir<-getwd()
dir.create(testdir)
dir.create(file.path(old.dir,testdir))
dir.create(file.path("C:/Users/Yashwanth/Documents",testdir))
dir.create(file.path("C:/Users/Yashwanth/Documents","testdir"))
dir.create("testdir")
setwd("testdir")
file.create("mytest.r")
file.create("mytest.R")
ls()
list.files()
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R","mytest2.R")
file.copy("mytest2.R","mytest3.R")
file.path("C:/Users/Yashwanth/Documents/testdir")
file.path("mytest3.R")
file.path("folder1","folder2")
?dir.create
dir.create(file.path("testdir2"))
dir.create(file.path('testdir2','testdir3'))
dir.create(file.path('testdir2','testdir3'),recursive = TRUE)
setwd(old.dir)
load(swirl)
swirl()
library(swirl)
swirl()
head(flags)
dim(flags)
class(flags)
cls_list<-lapply(flags,class)
cls_list
class(cls_list)
as.character(cls_list)
?sapply
sapply(cls_list, class)
cls_list<-sapply(flags, class)
cls_vect<-sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors<-flags[,11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes<-flags[,19:23]
lapply(flag_shapes,range)
shape_mat<-sapply(flag_shapes,range)
shape_mat
clas(shape_mat)
class(shape_mat)
unique(c(3,4,5,5,6,6))
unique(c(3,4,5,5,5,6,6))
unique_vals<-lapply(flags,unique)
unique_vals
length(unique_vals)
sapply(unique_vals,length)
sapply(list, unique)
sapply(flags, unique)
lapply(unique_vals,fuction(elem) elem[2])
lapply(unique_vals,unique(elem) elem[2])
lapply(unique_vals,unique elem[2])
lapply(unique_vals,unique)
lapply(unique_vals, fuction(elem) elem[2])
info()
lapply(unique_vals, function(elem) elem[2])
sapply(flags, unique)
vapply(flags,unique,numeric(1))
ok()
sapply(flags,calls)
sapply(flags,class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population,flags$red,summary)
tapply(flags$population,flags$landmass,summary)
sapply(flags, unique)
vapply(flags,unique,numeric(1))
ok()
sapply(flags,calls)
sapply(flags,class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population,flags$red,summary)
tapply(flags$population,flags$landmass,summary)
library(swirl)
swirl()
ls(plants)
ls()
class(plants)
dim(plants)
nrows(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants)
head(plants,10)
tail(plants,10)
tail(plants,15)
summary(plants)
taable(plants$Active_Growth_Period)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6,4,replace = TRUE)
sample(1:6,4,replace = TRUE)
sample(1:20,10)
LETTERS
sample(LETTERS)
sample((0,1),replace=TRUE,prob=c(0.3,0.7))
sample(0,1,replace=TRUE,prob=c(0.3,0.7))
sample(0:1,100,replace=TRUE,prob=c(0.3,0.7))
flips<-sample(c(0,1),100,replace=TRUE,prob=c(0.3,0.7))
flips
sum(flips)
?rbinom()
?rbinom
rbinom(1,size = 100,prob=0.7)
flips2<-rbinom(1,size = 100,prob=0.7)
flips2<-rbinom(100,size = 1,prob=0.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(10,100,25)
pnorm(5,10)
rpois(5,10)
my_pois<-replicate(100,rpois(5,10))
my_pois
cm<-colMeans(my_pois)
hist(cm)
data(cars)
?cars
head(cars)
plot(cars)
?plot
plot(x,y)
plot(x=cars$speed,y-cars$dist)
plot(x=cars$speed,y=cars$dist)
plot(y=cars$speed,x=cars$dist)
plot(speed=cars$speed,y=cars$dist)
plot(x=cars$speed,y=cars$dist,speed)
plot(x=cars$speed,y=cars$dist,xlab=Speed)
plot(x=cars$speed,y=cars$dist,xlab=cars$speed)
plot(x=cars$speed,y=cars$dist,xlab="Speed")
plot(x=cars$speed,y=cars$dist,ylab="Stopping Distance")
plot(x=cars$speed,y=cars$dist,xlab="Spedd",ylab="Stopping Distance")
plot(x=cars$speed,y=cars$dist,xlab="Speed",ylab="Stopping Distance")
plot(x=cars$speed,y=cars$dist,main="MYplot")
plot(cars,main="MYplot")
plot(cars,main="MY plot")
plot(cars,main="MY plot")
plot(cars,main="My plot")
plot(cars,main="My Plot")
plot(cars,sun="My Plot Subtitle")
plot(cars,sub="My Plot Subtitle")
plot(cars,col=2)
plot(cars,xlim=c(10,15))
plot(cars,pch=2
)
load(mtcars)
load("mtcars")
library(mtcars)
library("mtcars")
library("mtcars")
data(mtcars)
?boxplot
boxplot(data=mtcars,formula=mpg~cyl)
boxplot.default(data=mtcars,formula=mpg~cyl)
boxplot.default(data=mtcars,formula=mpg~cyl)
boxplot.default(data=mtcars,formula=mpg~cyl)
boxplot.default(x,data=mtcars,formula=mpg~cyl)
boxplot(data=mtcars,formula=mpg~cyl)
boxplot(formula=mpg~cyl,data=mtcars)
hist(mtcars$mpg)
set.seed(1)
rpois(5,2)
getwd()
setwd("C:/Users/Yashwanth/Desktop/coursera")
setwd("C:/Users/Yashwanth/Desktop/coursera/progA2")
outcome<-read.csv("outcome-of-care-measures.csv",colClasses = "character")
head(outcome)
hist(outcome[,11])
outcome[,11]<-as.numeric(outcome[,11])
hist(outcome[,11])
outcomes<-c("fdsf","qas","fdffg")
outcomes
outcomes=c("fdsf","qas","fdffg")
outcomes
outcomes1=c("fdsf","qas","fdffg")
outcomes1
load("best.R")
setwd("C:/Users/Yashwanth/Desktop/coursera/progA2")
load("best.R")
load(best.R)
load("best.R")
load("best.R")
load("best.R")
load("best.R")
load("rankhospital.R")
read("best.R")
source("best.R")
best("TX","heart attack")
source("best.R")
best("TX","heart attack")
source("best.R")
best("TX","heart attack")
source("best.R")
best("TX","heart attack")
source("best.R")
best("TX","heart attack")
source("best.R")
best("TX","heart attack")
source("best.R")
best("TX","heart attack")
source("best.R")
best("TX","heart attack")
source("best.R")
best("TX","heart attack")
source("best.R")
best("TX","heart attack")
best("TX","heart failure")
best("MD","heart attack")
best("BB","heart attack")
best("BB","hert attack")
best("TX","hert attack")
source("rankhospital.R.R")
source("rankhospital.R")
rankhospital("TX","heart failure",4)
rankhospital("TX","heart failure",1)
rankhospital("TX","heart failure","best")
rankhospital("MD","heart attack","worst")
source("best.R")
best("TX","hert attack")
best("TX","heart attack")
source("rankall.R")
head(rankall("heart attack",20),10)
tail(rankall("heart failure"),10)
tail(rankall("pneumonia","worst"),3)
best("SC","heart attack")
best("NY","pneumonia")
best("AK","pneumonia")
rankhospital("NC", "heart attack", "worst")
rankhospital("WA", "heart attack", 7)
rankhospital("TX", "pneumonia", 10)
rankhospital("NY", "heart attack", 7)
r <- rankall("heart attack", 4)
as.character(subset(r, state == "HI")$hospital)
r <- rankall("pneumonia", "worst")
as.character(subset(r, state == "NJ")$hospital)
r <- rankall("heart failure", 10)
as.character(subset(r, state == "NV")$hospital)
